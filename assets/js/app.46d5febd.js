"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[524],{1709:(t,n,e)=>{e.d(n,{l:()=>a});const a={category:{"/":{path:"/category/",map:{日语:{path:"/category/%E6%97%A5%E8%AF%AD/",indexes:[0,1,2,3,4]},算法:{path:"/category/%E7%AE%97%E6%B3%95/",indexes:[5]},数据结构:{path:"/category/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/",indexes:[6,7,8,9,10,11]}}}},tag:{"/":{path:"/tag/",map:{}}}}},4776:(t,n,e)=>{e.d(n,{M:()=>a});const a=["/Japanese/gxnnle9k/","/Japanese/4vcx7mtk/","/Japanese/ovayc8qw/","/Japanese/bmabtgq2/","/Japanese/k3qztucn/","/algorithm/1hou4df3/","/datastruc/%E5%93%88%E5%B8%8C%E8%A1%A8.html","/datastruc/%E5%B9%BF%E5%BA%A6%E4%BC%98%E5%85%88%E6%90%9C%E7%B4%A2.html","/datastruc/%E6%A0%88.html","/datastruc/%E6%B7%B1%E5%BA%A6%E4%BC%98%E5%85%88%E6%90%9C%E7%B4%A2.html","/datastruc/%E9%93%BE%E8%A1%A8.html","/datastruc/%E9%98%9F%E5%88%97.html","/intro.html"]},3781:(t,n,e)=>{e.d(n,{U:()=>a});const a={article:{"/":{path:"/article/",indexes:[12,0,1,2,3,4,5,6,7,8,9,10,11]}},star:{"/":{path:"/star/",indexes:[5,12]}},timeline:{"/":{path:"/timeline/",indexes:[0,1,2,3,4,5,6,7,8,9,10,11,12]}}}},6757:(t,n,e)=>{e.d(n,{B:()=>D});var a=e(8278),o=e(5084),s=e(3073),d=e(9403),r=e(596),i=e(8831);const p=(0,a.re)({enhance:({app:t})=>{(0,o.L4)("FontIcon")||t.component("FontIcon",d.A),(0,o.L4)("Badge")||t.component("Badge",r.A),(0,o.L4)("VPCard")||t.component("VPCard",i.A)},setup:()=>{(0,s.r9V)("https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6/js/brands.min.js",(()=>{}),{attrs:{"data-auto-replace-svg":"nest"}}),(0,s.r9V)("https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6/js/solid.min.js",(()=>{}),{attrs:{"data-auto-replace-svg":"nest"}}),(0,s.r9V)("https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6/js/fontawesome.min.js",(()=>{}),{attrs:{"data-auto-replace-svg":"nest"}})},rootComponents:[]});var l=e(6358),c=e(9588),m=e(355),h=e(560),g=e(1599),E=e(5496),u=e(593),b=e(3825),A=e(7152),B=e(5214),y=e(1219),w=e(3027),v=e(2763),f=e(9589);const x=(0,a.re)({enhance:({app:t})=>{t.component("CodeTabs",A.A),(0,o.L4)("CodeGroup",t)||t.component("CodeGroup",B.lF),(0,o.L4)("CodeGroupItem",t)||t.component("CodeGroupItem",B.E7),t.component("CodeDemo",y.A),t.component("MdDemo",w.A),t.component("Tabs",f.A)},setup:()=>{(0,v.p)()}});var C=e(3004),k=e(783),S=e(8465),F=e(641),J=e(8030),L=e(9920);(0,S.M_)((t=>{const n=t.t,e=!1!==t.I,a=t.i;return e?{title:n,content:a?()=>[(0,F.h)(k.GB,{icon:a}),n]:null,order:t.O,index:t.I}:null}));const M=(0,a.re)({enhance:({app:t,router:n})=>{const{scrollBehavior:e}=n.options;n.options.scrollBehavior=async(...t)=>(await k.lE.wait(),e(...t)),(0,k.fk)(t),t.component("HopeIcon",k.GB),t.component("BloggerInfo",J.tI),t.component("GlobalEncrypt",L.J),t.component("LocalEncrypt",L.n)},setup:()=>{(0,k.PV)(),(0,k.i$)(),(0,J.su)()},layouts:{Layout:k.PE,NotFound:k.Mk,BlogCategory:J.Pn,BlogHome:J.qX,BlogType:J.z7,PortfolioHome:J.G,Timeline:J.Kf}}),D=[{},p,l.A,c.A,m.A,h.A,g.A,E.A,u.A,b.A,x,C.A,M]},8164:(t,n,e)=>{e.d(n,{J:()=>o,c:()=>a});const a=JSON.parse('{"/Japanese/%E5%8A%A8%E8%AF%8D.html":"/Japanese/gxnnle9k/","/Japanese/%E5%90%8D%E8%AF%8D.html":"/Japanese/4vcx7mtk/","/Japanese/%E5%BD%A2%E5%AE%B9%E8%AF%8D.html":"/Japanese/ovayc8qw/","/Japanese/%E8%A1%A8%E8%BE%BE.html":"/Japanese/bmabtgq2/","/Japanese/%E8%AF%AD%E6%B3%95.html":"/Japanese/k3qztucn/","/algorithm/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95.html":"/algorithm/1hou4df3/"}'),o=Object.fromEntries([["/",{loader:()=>e.e(470).then(e.bind(e,4298)),meta:{t:"Mistyの小屋",i:"home"}}],["/intro.html",{loader:()=>e.e(912).then(e.bind(e,9836)),meta:{d:1715177675e3,u:!0,v:"/mangaAsuka.jpg",e:"\n<p>Hi,there.My name is MistyStar,you can also call me Misty.</p>\n<p>XD</p>\n<p>一只苦逼大学牲</p>\n<p>喜爱二次元文化</p>\n",r:{minutes:.13,words:39},t:"个人介绍",i:"circle-info",y:"a"}}],["/Japanese/gxnnle9k/",{loader:()=>e.e(470).then(e.bind(e,9582)),meta:{a:"MistyStar",d:1715266949e3,c:"日语",e:"\n<p>ます ました</p>\n<p>ません ませんでした</p>\n<p>去：行きます</p>\n<p>来：来ます</p>\n<p>回去，回来：帰（かえ）ります</p>\n<p>买：買（か）い</p>\n<p>做：し</p>\n<p>吃：食（た）べ</p>\n<p>学习：勉強（べんきょ）します</p>\n<p>讨厌：嫌（きら）い</p>\n<p>不讨厌：嫌いじゃない</p>\n<p>喜欢：好（す）き</p>\n<p>不喜欢：好きじゃない</p>\n<p>来自：から</p>\n",r:{minutes:.17,words:51},t:"动词",y:"a"}}],["/Japanese/4vcx7mtk/",{loader:()=>e.e(470).then(e.bind(e,5818)),meta:{a:"MistyStar",d:1715266949e3,c:"日语",e:"<p>名词</p>\n<h1><strong>人称代词</strong></h1>\n<p>我： 私(わたし)</p>\n<p>僕 (ぼく)</p>\n<p>俺 (おれ)</p>\n<p>我们：</p>\n<p>你： あなた 不知道对方姓名时用</p>\n<p>你们：あなた方(かた)</p>\n<p>他：彼 (かれ)</p>\n<p>他们：彼ら(かれら)</p>\n<p>她：彼女(かのじょ)</p>\n<h1><strong>方位词</strong></h1>\n<p>上面 上(うえ)</p>\n<p>下面 下(した)</p>\n<p>前面 前(まえ)</p>\n<p>后面 後(うし)ろ</p>\n<p>旁边 隣 (となり)</p>",r:{minutes:.91,words:274},t:"名词",y:"a"}}],["/Japanese/ovayc8qw/",{loader:()=>e.e(470).then(e.bind(e,2955)),meta:{a:"MistyStar",d:1715266949e3,c:"日语",e:"\n<p>（身体/精神）好 元気</p>\n",r:{minutes:.09,words:27},t:"形容词",y:"a"}}],["/Japanese/bmabtgq2/",{loader:()=>e.e(470).then(e.bind(e,145)),meta:{a:"MistyStar",d:1715266949e3,c:"日语",e:"\n<h2>礼貌语言</h2>\n<ol>\n<li>\n<p>方 (かた)</p>\n<pre><code>人(ひと)--\\&gt;方(かた)\n</code></pre>\n</li>\n<li>\n<p>询问年龄</p>\n</li>\n</ol>\n<p>何 歳(さい) ですか</p>\n<p>礼貌语言 おいくつですか</p>\n<p>直接问孩子一般用 いくつ  或 何 歳</p>\n<h2>どうぞ</h2>\n<p>用于给对方物品，或劝对方进餐</p>\n",r:{minutes:.2,words:60},t:"表达",y:"a"}}],["/Japanese/k3qztucn/",{loader:()=>e.e(470).then(e.bind(e,2862)),meta:{a:"MistyStar",d:1715266949e3,c:"日语",e:"\n<h2><strong>これ/それ/あれ は 名です</strong></h2>\n<p>指示事物的词。相当于汉语的“这、这个”“那、那个”。</p>\n<p>其用法如下:</p>\n<p><em>（1）说话人和听话人相隔一段距离，面对面时</em></p>\n<p>■これ：距说话人较近的事物[说话人的范围、领域内的事物]</p>\n<p>■それ:距听话人较近的事物[听话人的范围、领域内的事物】</p>\n<p>■あれ：距说话人和听话人都比较远的事物[不属于任何一方范围、领域内的事物】</p>\n<p><em>（2）说话人和听话人位于同一位置，面向同一方向时</em></p>\n<p>■これ：距说话人、听话人较近的事物</p>",r:{minutes:1.04,words:313},t:"语法",y:"a"}}],["/algorithm/1hou4df3/",{loader:()=>e.e(470).then(e.bind(e,178)),meta:{a:"MistyStar",d:1715266949e3,c:"算法",e:"\n<table>\n<thead>\n<tr>\n<th>排序方法</th>\n<th></th>\n<th>时间复杂度</th>\n<th></th>\n<th>空间复杂度</th>\n<th>稳定性</th>\n<th>代码复杂度</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td></td>\n<td>最坏</td>\n<td>平均</td>\n<td>最好</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>冒泡排序</td>\n<td>n^2</td>\n<td>n^2</td>\n<td>n</td>\n<td>1</td>\n<td>稳定</td>\n<td>简单</td>\n</tr>\n<tr>\n<td>直接选择排序</td>\n<td>n^2</td>\n<td>n^2</td>\n<td>n^2</td>\n<td>1</td>\n<td>不稳定</td>\n<td>简单</td>\n</tr>\n<tr>\n<td>直接插入排序</td>\n<td>n^2</td>\n<td>n^2</td>\n<td>n^2</td>\n<td>1</td>\n<td>稳定</td>\n<td>简单</td>\n</tr>\n<tr>\n<td>折半插入排序</td>\n<td>n^2</td>\n<td>n^2</td>\n<td>n</td>\n<td>1</td>\n<td>稳定</td>\n<td>简单</td>\n</tr>\n<tr>\n<td>快速排序</td>\n<td>n^2</td>\n<td>nlogn</td>\n<td>nlogn</td>\n<td>平均logn,最坏n</td>\n<td>不稳定</td>\n<td>较复杂</td>\n</tr>\n<tr>\n<td>堆排序</td>\n<td>nlogn</td>\n<td>nlogn</td>\n<td>nlogn</td>\n<td>1</td>\n<td>不稳定</td>\n<td>复杂</td>\n</tr>\n<tr>\n<td>归并排序</td>\n<td>nlogn</td>\n<td>nlogn</td>\n<td>nlogn</td>\n<td>n</td>\n<td>稳定</td>\n<td>较复杂</td>\n</tr>\n</tbody>\n</table>",r:{minutes:16.41,words:4923},t:"排序算法",y:"a"}}],["/datastruc/%E5%93%88%E5%B8%8C%E8%A1%A8.html",{loader:()=>e.e(438).then(e.bind(e,4779)),meta:{d:1715266949e3,c:"数据结构",e:"\n<p>哈希表（Hash Table），也称为散列表，是一种数据结构，它可以提供非常快速的数据插入和查找操作。哈希表通过一个称为哈希函数（Hash Function）的算法，将键（Key）转换为数组索引，从而能够快速定位到数据的存储位置。</p>\n<p>在哈希表中，每个键值对（Key-Value Pair）都被哈希函数映射到表中的一个位置，以便快速访问。但是，由于不同的键可能会被映射到同一个位置，这就产生了所谓的哈希冲突（Hash Collision）。为了解决冲突，有几种方法可以使用，如链地址法（Chaining）和开放地址法（Open Addressing）。</p>\n<p>链地址法是在冲突发生的索引处使用链表来存储所有映射到该索引的元素。而开放地址法则是寻找另一个空闲的位置来存储冲突的元素。</p>",r:{minutes:5.24,words:1573},t:"哈希表",y:"a"}}],["/datastruc/%E5%B9%BF%E5%BA%A6%E4%BC%98%E5%85%88%E6%90%9C%E7%B4%A2.html",{loader:()=>e.e(83).then(e.bind(e,4781)),meta:{d:1715266949e3,c:"数据结构",e:"\n<p>广度优先搜索（Breadth First Search，简称BFS）是一种用于遍历或搜索树或图的算法。它从树的根（或图中的某个节点）开始，探索邻近的节点，然后再对每个邻近节点做同样的操作，层层递进。这个过程持续进行，直到找到目标节点或遍历完所有节点。</p>\n<p>BFS的核心思想是使用队列来实现搜索过程。在搜索的每一步中，算法都会取出队列中的第一个节点，检查它是否为目标节点，如果不是，就将其所有未访问过的邻近节点加入队列。这样，队列中的节点就像是在按层次扩展，先进入队列的节点会先被探索。</p>\n<p>这种搜索策略不仅可以用来确定从源节点到目标节点是否存在路径，还可以用来找到最短路径，因为在无权图中，BFS首次访问到的路径便是最短路径。</p>",r:{minutes:1.97,words:591},t:"广度优先搜索",y:"a"}}],["/datastruc/%E6%A0%88.html",{loader:()=>e.e(906).then(e.bind(e,5620)),meta:{d:1715266949e3,c:"数据结构",e:"\n<p>栈（Stack）是一种只允许在一端进行插入或删除操作的线性表。这种结构具有后进先出（Last In First Out, LIFO）的特性，意味着最后插入的元素将是第一个被删除的。在栈中，插入和删除操作通常发生在同一端，称为栈顶，而另一端则被称为栈底。</p>\n<p>栈的基本操作包括：</p>\n<ul>\n<li><strong>初始化</strong>（InitStack）：创建一个空栈。</li>\n<li><strong>判空</strong>（Empty）：检查栈是否为空。</li>\n<li><strong>进栈</strong>（Push）：在栈顶添加一个元素。</li>\n<li><strong>出栈</strong>（Pop）：移除栈顶的元素。</li>\n<li><strong>读栈顶元素</strong>（GetTop）：获取栈顶元素的值，但不移除它。</li>\n<li><strong>销毁栈</strong>（DestroyStack）：移除栈中的所有元素，并释放内存。</li>\n</ul>",r:{minutes:1.35,words:404},t:"栈",y:"a"}}],["/datastruc/%E6%B7%B1%E5%BA%A6%E4%BC%98%E5%85%88%E6%90%9C%E7%B4%A2.html",{loader:()=>e.e(201).then(e.bind(e,5576)),meta:{d:1715266949e3,c:"数据结构",e:"\n<p>深度优先搜索算法（Depth-First Search，简称DFS）是一种用于遍历或搜索树或图的算法。这个算法会尽可能深地搜索树的分支。当节点v的所在边都已被探寻过，搜索将回溯到发现节点v的那条边的起始节点。整个过程反复进行直到所有节点都被访问为止。DFS属于盲目搜索，最糟糕的情况算法时间复杂度为O(n!)。</p>\n<p>基本思想是为了求得问题的解，先选择某一种可能情况向前探索；在探索过程中，一旦发现原来的选择是错误的，就退回一步重新选择，继续向前探索；如此反复进行，直至得到解或证明无解。</p>\n<p>源: 与必应的对话， 2024/3/28\n(1) 深度优先搜索_百度百科. https://baike.baidu.com/item/%E6%B7%B1%E5%BA%A6%E4%BC%98%E5%85%88%E6%90%9C%E7%B4%A2/5224976.\n(2) DFS (深度优先搜索) 算法详解 + 模板 + 例题，这一篇就够了_dfs算法-CSDN博客. https://blog.csdn.net/qq_47733361/article/details/123858318.\n(3) 深度优先搜索 - 维基百科，自由的百科全书. https://zh.wikipedia.org/zh-hans/%E6%B7%B1%E5%BA%A6%E4%BC%98%E5%85%88%E6%90%9C%E7%B4%A2.\n(4) DFS（图论） - OI Wiki. https://oi-wiki.org/graph/dfs/.</p>",r:{minutes:2.16,words:647},t:"深度优先搜索",y:"a"}}],["/datastruc/%E9%93%BE%E8%A1%A8.html",{loader:()=>e.e(590).then(e.bind(e,647)),meta:{d:1715266949e3,c:"数据结构",e:"\n<h2>C++ STL 之 List</h2>\n<h3>一、list 的介绍</h3>\n<p>list 是 STL 中的一个序列容器，实现的是双向链表，每个元素都有两个指针，分别指向元素的前驱和后继。</p>\n<p>list 不需要指定内存大小，因为他存储在不连续的内存空间中，并由指针将他们连接在一起。</p>\n<p>由于链表的特点，不能进行内部的随机访问，无法通过位置来访问元素，即不支持[ ] 操作符和vector.at() 操作，必须逐个遍历，可以通过开始元素或者最后一个元素遍历，它的查找要在O(n)的时间才能完成。但它允许序列快速在任意位置进行插入和删除操作作，包括在两边的pop()和push()操作。</p>",r:{minutes:6.25,words:1876},t:"链表",y:"a"}}],["/datastruc/%E9%98%9F%E5%88%97.html",{loader:()=>e.e(622).then(e.bind(e,4237)),meta:{d:1715266949e3,c:"数据结构",e:"\n<p>队列是一种特殊的线性表，它只允许在表的一端（队尾）进行插入操作，而在表的另一端（队头）进行删除操作。队列遵循先进先出（First In First Out, FIFO）的原则，即先进入队列的元素将会最先被删除。在队列中，进行插入操作的一端称为队尾，进行删除操作的一端称为队头。</p>\n<p>队列可以通过多种方式实现，包括顺序存储结构（如数组）和链式存储结构（如链表）。顺序队列使用一组连续的存储单元按顺序存放队列元素，而链队列则由一系列节点组成，每个节点包含数据和指向下一个节点的指针。</p>\n<p>(1) 【数据结构】队列(顺序队列、循环队列、链队列）_顺序队列的定义-CSDN博客. https://blog.csdn.net/Jacky_Feng/article/details/108595654.\n(2) 【数据结构入门】队列（Queue）详解（定义、销毁、入队、出队等）| 图解数据结构，超详细哦~-CSDN博客. https://blog.csdn.net/weixin_48025315/article/details/120277050.\n(3) 队列的定义-CSDN博客. https://blog.csdn.net/ZCMUCZX/article/details/80920876.</p>",r:{minutes:3.17,words:952},t:"队列",y:"a"}}],["/404.html",{loader:()=>e.e(490).then(e.bind(e,4510)),meta:{t:""}}],["/Japanese/",{loader:()=>e.e(470).then(e.bind(e,5783)),meta:{t:"Japanese"}}],["/algorithm/",{loader:()=>e.e(470).then(e.bind(e,5147)),meta:{t:"Algorithm"}}],["/datastruc/",{loader:()=>e.e(470).then(e.bind(e,4689)),meta:{t:"Datastruc"}}],["/category/",{loader:()=>e.e(470).then(e.bind(e,905)),meta:{t:"分类",I:!1}}],["/category/%E6%97%A5%E8%AF%AD/",{loader:()=>e.e(470).then(e.bind(e,8304)),meta:{t:"日语 分类",I:!1}}],["/category/%E7%AE%97%E6%B3%95/",{loader:()=>e.e(470).then(e.bind(e,7102)),meta:{t:"算法 分类",I:!1}}],["/category/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/",{loader:()=>e.e(470).then(e.bind(e,4170)),meta:{t:"数据结构 分类",I:!1}}],["/tag/",{loader:()=>e.e(470).then(e.bind(e,4103)),meta:{t:"标签",I:!1}}],["/article/",{loader:()=>e.e(470).then(e.bind(e,9574)),meta:{t:"文章",I:!1}}],["/star/",{loader:()=>e.e(470).then(e.bind(e,3639)),meta:{t:"星标",I:!1}}],["/timeline/",{loader:()=>e.e(470).then(e.bind(e,3931)),meta:{t:"时间轴",I:!1}}]])},8761:(t,n,e)=>{e.d(n,{U:()=>a});const a=JSON.parse('{"base":"/","lang":"zh-CN","title":"MistyStar","description":"","head":[["link",{"rel":"icon","href":"/Asuka.png"}]],"locales":{}}')},6653:(t,n,e)=>{e.d(n,{K:()=>a});const a=JSON.parse('{"encrypt":{"config":{"/demo/encrypt.html":["$2a$10$ZyvIOSBU0dCu3/Oc4cYpTuCci1ZjT.4iA86zSQhTGQKXT/4hmBzFG"]}},"author":{"name":"MistyStar","url":"https://mister-hope.com"},"logo":"Asuka.png","repo":"Misty-Star/Misty-Star.github.io","docsDir":"src","footer":"Misty\'s Blog","displayFooter":true,"blog":{"description":"弱鸡大学牲","intro":"/intro.html","medias":{"QQ":"tencent://AddContact/?fromId=45&fromSubId=1&subcmd=all&uin=1278734874","BiliBili":"https://space.bilibili.com/44950466","Steam":"https://steamcommunity.com/profiles/76561198853793634/","Discord":"https://discord.com/users/1108379805453393962","GitHub":"https://github.com/Misty-Star","Email":"mailto:1278734974@qq.com"}},"locales":{"/":{"lang":"zh-CN","navbarLocales":{"langName":"简体中文","selectLangAriaLabel":"选择语言"},"metaLocales":{"author":"作者","date":"写作日期","origin":"原创","views":"访问量","category":"分类","tag":"标签","readingTime":"阅读时间","words":"字数","toc":"此页内容","prev":"上一页","next":"下一页","lastUpdated":"上次编辑于","contributors":"贡献者","editLink":"在 GitHub 上编辑此页","print":"打印"},"blogLocales":{"article":"文章","articleList":"文章列表","category":"分类","tag":"标签","timeline":"时间轴","timelineTitle":"昨日不在","all":"全部","intro":"个人介绍","star":"星标","empty":"$text 为空"},"paginationLocales":{"prev":"上一页","next":"下一页","navigate":"跳转到","action":"前往","errorText":"请输入 1 到 $page 之前的页码！"},"outlookLocales":{"themeColor":"主题色","darkmode":"外观","fullscreen":"全屏"},"encryptLocales":{"iconLabel":"文章已加密","placeholder":"输入密码","remember":"记住密码","errorHint":"请输入正确的密码"},"routeLocales":{"skipToContent":"跳至主要內容","notFoundTitle":"页面不存在","notFoundMsg":["这里什么也没有","我们是怎么来到这儿的？","这 是 四 零 四 !","看起来你访问了一个失效的链接"],"back":"返回上一页","home":"带我回家","openInNewWindow":"Open in new window"},"navbar":["/",{"text":"计算机","icon":"laptop-code","children":[{"text":"算法","icon":"laptop-code","link":"/algorithm/"},{"text":"数据结构","icon":"laptop-code","link":"/datastruc/"}]},{"text":"网络安全","icon":"laptop-code","link":"/cyber/"},{"text":"日语","icon":"book","link":"/Japanese/"},{"text":"英语","icon":"book","link":"/English/ "}],"sidebar":{"/":["","intro"],"/algorithm/":"structure","/datastruc/":"structure","/Japanese/":"structure","/English/":"structure"}}}}')},8123:(t,n,e)=>{e.d(n,{v:()=>a});const a={"/algorithm/":["/algorithm/1hou4df3/"],"/datastruc/":["哈希表","广度优先搜索","栈","深度优先搜索","链表","队列"],"/Japanese/":["/Japanese/gxnnle9k/","/Japanese/4vcx7mtk/","/Japanese/ovayc8qw/","/Japanese/bmabtgq2/","/Japanese/k3qztucn/"],"/English/":[]}},2878:(t,n,e)=>{e.d(n,{P:()=>a});const a={QQ:'<svg xmlns="http://www.w3.org/2000/svg" class="icon qq-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#5eaade"/><path fill="#fff" d="M805.25 585.542c-15-48.188-32.25-88.688-58.781-154.97 4.125-174.093-68.25-314.905-234.938-314.905-168.562 0-239.344 143.625-234.844 314.906-26.625 66.375-43.78 106.594-58.78 154.969-31.876 102.656-21.563 145.125-13.688 146.062 16.875 2.063 65.718-77.25 65.718-77.25 0 45.938 23.625 105.844 74.813 149.063-24.75 7.593-80.344 28.03-67.125 50.437 10.688 18.094 183.938 11.531 233.906 5.906 49.969 5.625 223.219 12.188 233.906-5.906 13.22-22.312-42.468-42.844-67.125-50.437 51.188-43.313 74.813-103.22 74.813-149.063 0 0 48.844 79.313 65.719 77.25 7.969-1.031 18.281-43.5-13.594-146.062z"/></svg>',BiliBili:'<svg xmlns="http://www.w3.org/2000/svg" class="icon bilibili-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#1296db"/><path fill="#fff" d="M745.363 177.725a47 47 0 0 1 0 66.3L702.5 286.85h44A141 141 0 0 1 887 427.512v281.25a141 141 0 0 1-141 140.626H277.25A141 141 0 0 1 137 708.763v-281.25a141 141 0 0 1 141-141h43.725l-42.788-42.825a47 47 0 1 1 66.263-66.3l99.45 99.45c2.963 2.962 5.438 6.187 7.425 9.637h120.487c1.988-3.45 4.5-6.75 7.463-9.675l99.413-99.45a47 47 0 0 1 66.3 0zm1.012 203.25h-468.75a47 47 0 0 0-46.763 43.388l-.112 3.525v281.25c0 24.712 19.125 44.962 43.387 46.724l3.488.15h468.75a47 47 0 0 0 46.763-43.387l.112-3.487v-281.25c0-26-21-47-47-46.876zm-375 93.75c26 0 47 21 47 47v47a47 47 0 1 1-93.75 0V521.6c0-26 21-47 47-47zm281.25 0c26 0 47 21 47 47v47a47 47 0 1 1-93.75 0V521.6c0-26 21-47 47-47z"/></svg>',Steam:'<svg xmlns="http://www.w3.org/2000/svg" class="icon steam-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="488" fill="#fff"/><path fill="#13227a" d="M1008 512c0 274-222.4 496-496.8 496-227.6 0-419.2-152.6-478-360.8l190.4 78.6c12.8 64.2 69.8 112.8 137.8 112.8 78.4 0 143.8-64.8 140.4-147l169-120.4c104.2 2.6 191.6-81.8 191.6-187 0-103.2-84-187-187.4-187s-187.4 84-187.4 187v2.4L369.2 558c-31-1.8-61.4 6.8-87 24.2L16 472.2C36.4 216.8 250.2 16 511.2 16 785.6 16 1008 238 1008 512zM327.4 768.6l-61-25.2a105.58 105.58 0 0 0 54.4 51.6c53.8 22.4 115.6-3.2 138-56.8 10.8-26 11-54.6.2-80.6-10.8-26-31-46.4-57-57.2-25.8-10.8-53.4-10.4-77.8-1.2l63 26c39.6 16.4 58.4 61.8 41.8 101.4-16.6 39.8-62 58.4-101.6 42zM675 508.8c-68.8 0-124.8-56-124.8-124.6s56-124.6 124.8-124.6 124.8 56 124.8 124.6S744 508.8 675 508.8zm.2-31.2c51.8 0 93.8-42 93.8-93.6 0-51.8-42-93.6-93.8-93.6s-93.8 42-93.8 93.6c.2 51.6 42.2 93.6 93.8 93.6z"/></svg>',Discord:'<svg xmlns="http://www.w3.org/2000/svg" class="icon discord-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#2DAAE1"/><path fill="#fff" d="m422.935 240.147 5.851 8.052c-113.039 34.253-165.649 84.585-165.649 84.585s13.645-8.052 37.024-18.123c66.28-30.215 118.865-38.267 142.244-40.286 3.91 0 7.819-1.994 9.76-1.994 38.966-6.058 81.816-6.058 126.658-2.02 58.462 8.053 122.749 24.157 187.061 62.423 0 0-48.7-48.338-155.862-82.566l7.767-10.071h1.968c13.308.233 91.757 4.246 173.416 68.481 0 0 89.634 169.144 89.634 376.555 1.942-2.02-50.668 92.637-189.003 96.65 0 0-23.405-28.194-40.933-52.35 81.84-24.157 113.013-76.534 113.013-76.534a313.796 313.796 0 0 1-72.106 38.267c-31.172 14.11-60.403 22.162-89.633 28.22-60.404 12.066-114.955 8.027-161.74 0a636.81 636.81 0 0 1-91.576-28.22c-13.644-6.033-29.23-12.065-44.817-22.137-1.941-2.02-3.883-2.02-5.85-4.039-1.943 0-1.943-2.02-1.943-2.02-11.702-6.032-17.528-10.07-17.528-10.07s29.23 52.376 109.104 76.532c-19.47 24.157-40.907 54.371-40.907 54.371-138.36-4.039-190.97-98.67-190.97-98.67 0-207.41 89.633-376.555 89.633-376.555 89.634-70.5 175.384-68.481 175.384-68.481zm213.961 233.017c-35.315 0-65 34.512-65 78s29.412 78 65 78 65-34.512 65-78-29.412-78-65-78zm-233.016 0c-35.315 0-65 34.512-65 78s29.412 78 65 78 64.726-34.512 64.726-78-29.411-78-64.726-78z"/></svg>',GitHub:'<svg xmlns="http://www.w3.org/2000/svg" class="icon github-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#171515"/><path fill="#fff" d="M509.423 146.442c-200.317 0-362.756 162.42-362.756 362.8 0 160.266 103.936 296.24 248.109 344.217 18.139 3.327 24.76-7.872 24.76-17.486 0-8.613-.313-31.427-.49-61.702-100.912 21.923-122.205-48.63-122.205-48.63-16.495-41.91-40.28-53.067-40.28-53.067-32.937-22.51 2.492-22.053 2.492-22.053 36.407 2.566 55.568 37.386 55.568 37.386 32.362 55.438 84.907 39.43 105.58 30.143 3.296-23.444 12.667-39.43 23.032-48.498-80.557-9.156-165.246-40.28-165.246-179.297 0-39.604 14.135-71.988 37.342-97.348-3.731-9.178-16.18-46.063 3.556-96.009 0 0 30.46-9.754 99.76 37.19 28.937-8.048 59.97-12.071 90.823-12.211 30.807.14 61.843 4.165 90.822 12.21 69.26-46.944 99.663-37.189 99.663-37.189 19.792 49.946 7.34 86.831 3.61 96.01 23.25 25.359 37.29 57.742 37.29 97.347 0 139.366-84.82 170.033-165.637 179.013 13.026 11.2 24.628 33.342 24.628 67.182 0 48.498-.445 87.627-.445 99.521 0 9.702 6.535 20.988 24.945 17.444 144.03-48.067 247.881-183.95 247.881-344.175 0-200.378-162.442-362.798-362.802-362.798z"/></svg>',Email:'<svg xmlns="http://www.w3.org/2000/svg" class="icon email-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#1384FF"/><path fill="#fff" d="M270.077 286.233H751.99c32.933 0 59.86 24.855 60.274 55.51l-301.023 157L210.217 341.88c.207-30.723 26.927-55.717 59.86-55.717zm-59.929 115.714-.276 277.756c0 30.931 27.134 56.2 60.205 56.2H751.99c33.14 0 60.274-25.269 60.274-56.2V401.81L518.283 551.492a15.88 15.88 0 0 1-14.43 0L210.148 401.947z"/></svg>'}}},t=>{t.O(0,[338,191],(()=>(8731,t(t.s=8731)))),t.O()}]);